{"version":3,"sources":["app.js"],"names":["datePicker","document","getElementById","sessions","querySelectorAll","seats","note","arrowLeft","arrowRight","now","Date","setDate","getDate","currentDay","toISOString","slice","currentTime","getHours","daysArray","getDaysArray","dateSelected","start","end","arr","date","push","getSeatData","seatData","localStorage","getItem","JSON","parse","updateSeat","e","seat","target","sessionId","parentNode","id","classList","contains","remove","filteredData","filter","currSeat","session","getAttribute","newData","length","setItem","stringify","add","newSeat","seatDataNew","goPrev","currentDayIndex","indexOf","children","removeAttribute","setAttribute","innerText","formatDate","populateUI","goNext","dateArr","split","setDateSection","dates","noteContent","forEach","i","dateFormatted","option","createElement","value","appendChild","resetUI","deleteOldData","initialLoad","call","addEventListener","window","keyCode"],"mappings":"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","file":"app.js","sourceRoot":"..","sourcesContent":["// DOM ELEMENTS\nconst datePicker = document.getElementById('date-picker');\nconst sessions = document.querySelectorAll('.session');\nconst seats = document.querySelectorAll('.session .seat');\nconst note = document.getElementById('date-note');\nconst arrowLeft = document.getElementById('arrow-left');\nconst arrowRight = document.getElementById('arrow-right');\n\n// GLOBAL VARIABLES\nconst now = new Date();\nnow.setDate(now.getDate());\nconst currentDay = now.toISOString().slice(0, 10);\nconst currentTime = now.getHours();\nconst daysArray = getDaysArray();\nlet dateSelected = currentDay;\n\n// EVENT LISTENERS\n// toggle seat\nseats.forEach.call(seats, function (e) {\n  e.addEventListener('click', updateSeat, false);\n});\n\n// changing date\ndatePicker.addEventListener('change', (e) => {\n  dateSelected = e.target.value;\n  note.innerText = 'Vyberte sedadla v požadovaném čase';\n  populateUI(e.target.value);\n});\n\n// changing date with arrows or key press\narrowLeft.addEventListener('click', goPrev);\narrowRight.addEventListener('click', goNext);\n\nwindow.addEventListener('keydown', (e) => {\n  if (e.keyCode === 37) {\n    goPrev();\n  } else if (e.keyCode === 39) {\n    goNext();\n  }\n});\n\n// FUNCTIONS\n// gets dates -7 days from today and +7\nfunction getDaysArray() {\n  const start = new Date();\n  start.setDate(start.getDate() - 7);\n  const end = new Date();\n  end.setDate(end.getDate() + 7);\n\n  for (\n    var arr = [], date = new Date(start);\n    date <= end;\n    date.setDate(date.getDate() + 1)\n  ) {\n    arr.push(new Date(date).toISOString().slice(0, 10));\n  }\n  return arr;\n}\n\n// gets data from localStorage\nfunction getSeatData() {\n  const seatData = localStorage.getItem('seatData');\n  return JSON.parse(seatData) || null;\n}\n\n// toggles seat selection and updates data in localStorage\nfunction updateSeat(e) {\n  // find seat\n  const seat = e.target;\n  // find its parent session\n  const sessionId = seat.parentNode.id;\n  // get data from localStorage\n  const seatData = getSeatData();\n\n  if (!seat.classList.contains('selected')) {\n    // add class\n    seat.classList.add('selected');\n\n    // update data in localStorage\n    if (seatData && seatData.length !== 0) {\n      // const seatDataObj = JSON.parse(seatData);\n      const newSeat = {\n        session: sessionId,\n        seat: seat.getAttribute('data-id'),\n      };\n\n      seatData[dateSelected] = seatData[dateSelected]\n        ? [...seatData[dateSelected], newSeat]\n        : [newSeat];\n\n      localStorage.setItem('seatData', JSON.stringify(seatData));\n    } else {\n      const seatDataNew = {};\n      seatDataNew[dateSelected] = [\n        { session: sessionId, seat: seat.getAttribute('data-id') },\n      ];\n      localStorage.setItem('seatData', JSON.stringify(seatDataNew));\n    }\n  } else {\n    // remove class\n    seat.classList.remove('selected');\n\n    // update data in localStorage\n    const filteredData = seatData[dateSelected].filter(\n      (currSeat) =>\n        currSeat.session !== sessionId ||\n        currSeat.seat !== seat.getAttribute('data-id')\n    );\n\n    const newData = {\n      ...seatData,\n      [dateSelected]: filteredData,\n    };\n\n    if (filteredData.length === 0) {\n      delete newData[dateSelected];\n    }\n\n    localStorage.setItem('seatData', JSON.stringify(newData));\n  }\n}\n\n// move to previous date\nfunction goPrev() {\n  const currentDayIndex = daysArray.indexOf(dateSelected);\n\n  if (currentDayIndex === 0) {\n    arrowLeft.classList.add('disabled');\n    return;\n  }\n\n  dateSelected = daysArray[currentDayIndex - 1];\n  datePicker.children[currentDayIndex].removeAttribute('selected');\n  datePicker.children[currentDayIndex - 1].setAttribute('selected', true);\n  datePicker.children[currentDayIndex - 1].innerText = formatDate(dateSelected);\n\n  populateUI(dateSelected);\n}\n\n// move to next date\nfunction goNext() {\n  const currentDayIndex = daysArray.indexOf(dateSelected);\n\n  if (currentDayIndex === 14) {\n    arrowRight.classList.add('disabled');\n    return;\n  }\n\n  dateSelected = daysArray[currentDayIndex + 1];\n  datePicker.children[currentDayIndex].removeAttribute('selected');\n  datePicker.children[currentDayIndex + 1].setAttribute('selected', true);\n  datePicker.children[currentDayIndex + 1].innerText = formatDate(dateSelected);\n\n  populateUI(dateSelected);\n}\n\n// format date from YYYY-MM-DD to DD.MM.YYYY\nfunction formatDate(date) {\n  // format date\n  const dateArr = date.split('-');\n  return `${dateArr[2]}.${dateArr[1]}.${dateArr[0]}`;\n}\n\n// SET UI\n// sets up the date picker and note to user depending on time\nfunction setDateSection() {\n  const dates = getDaysArray();\n  let noteContent = 'Vyberte sedadla v požadovaném čase';\n\n  dates.forEach((date, i) => {\n    const dateFormatted = formatDate(date);\n\n    const option = document.createElement('option');\n    option.value = date;\n    option.innerText = dateFormatted;\n    if (i === 7) {\n      option.setAttribute('selected', true);\n    }\n    datePicker.appendChild(option);\n  });\n\n  if (dateSelected === currentDay && currentTime >= 20) {\n    noteContent =\n      'Pro dnešek již rezervace nejsou možné, vyberte si prosím jiný den';\n  }\n\n  note.innerText = noteContent;\n}\n\n// resets the UI\nfunction resetUI() {\n  sessions.forEach((session) => session.classList.remove('blocked'));\n  seats.forEach((seat) => seat.classList.remove('selected'));\n  arrowLeft.classList.remove('disabled');\n  arrowRight.classList.remove('disabled');\n}\n\n// populates UI upon initial load (or when switching between dates) according to data from localStorage\nfunction populateUI(date) {\n  resetUI();\n\n  // block past sessions\n  if (currentDay > dateSelected) {\n    sessions.forEach((session) => session.classList.add('blocked'));\n  }\n\n  if (currentDay === dateSelected) {\n    sessions.forEach((session) => {\n      if (session.id <= currentTime) {\n        session.classList.add('blocked');\n      }\n    });\n  }\n\n  // disable arrows when reaching end\n  if (daysArray.indexOf(date) === 0) {\n    arrowLeft.classList.add('disabled');\n  }\n\n  if (daysArray.indexOf(date) === 14) {\n    arrowRight.classList.add('disabled');\n  }\n\n  const seatData = getSeatData();\n  if (seatData && seatData[date]) {\n    sessions.forEach((session) => {\n      seatData[date].forEach((seat) => {\n        if (seat.session === session.id) {\n          session.children[seat.seat].classList.add('selected');\n        }\n      });\n    });\n  }\n}\n\n// checks for old data upon initial load and deletes them\nfunction deleteOldData() {\n  const seatData = getSeatData();\n  if (seatData) {\n    for (let date in seatData) {\n      if (getDaysArray().indexOf(date) === -1) {\n        delete seatData[date];\n      }\n    }\n    localStorage.setItem('seatData', JSON.stringify(seatData));\n  }\n}\n\n// INIT\nfunction initialLoad() {\n  setDateSection();\n  populateUI(dateSelected);\n  deleteOldData();\n}\n\ninitialLoad();\n"]}